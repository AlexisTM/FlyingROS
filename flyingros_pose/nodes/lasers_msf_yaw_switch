#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
lasers_msf_switch.py

Lasers have the right mean yaw, while IMU have the right variations of the yaw. 
Meanwhile, the yaw received by the Pixhawk will be corrected by lasers and take 
some seconds to be correct (same mean). Therefore, we need to start MSF (input the IMU) 
AFTER the IMU converged.

Method : 

1 : Start Mavros & Lasers
2 : Publish lasers (pose) to mavros/mocap
3 : Monitor the convergence (to 1 or 2 degrees)
4 : On convergence, start MSF with lasers & IMU as input
5 : Once MSF converged, stop publishing lasers and publish msf_core/pose instead to mavros/mocap

This file is a part of FlyingROS

FlyingROS free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

FlyingROS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with FlyingROS.  If not, see <http://www.gnu.org/licenses/>.

Software created by Alexis Paques and Nabil Nehri for the UCL
in a Drone-Based Additive Manufacturing of Architectural Structures
project financed by the MIT Seed Fund

Copyright (c) Alexis Paques 2016
"""

## TODO

from __future__ import division
import rospy


def init():
    # Global initialisation
    global rtkPosition, laser_altitude
    
    laser_altitude = Float64()

    rospy.init_node('lasers_msf_yaw_switch')
    # Subscribers & Publishers
    # altitude_pub     = rospy.Publisher('flyingros/lasers/altitude', Float64, queue_size=1)
    # lasers_sub     = rospy.Subscriber('flyingros/lasers/raw', Distance, raw_lasers_callback)

    rospy.spin()


if __name__ == '__main__':
    rospy.loginfo("laser altitude started")
    try:
        init()
    except rospy.ROSInterruptException:
        rospy.loginfo("laser altitude init failed")
        pass